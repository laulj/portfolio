/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/js/dashboard.js":
/*!********************************!*\
  !*** ./assets/js/dashboard.js ***!
  \********************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n$(document).ready(function () {\n  var dashboard = ReactDOM.createRoot(document.getElementById(\"dashboard-page\"));\n  var ReactSpring = window[\"ReactSpring\"];\n  function formatPrice(num) {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  // Custom interval hook\n  function useInterval(callback, delay) {\n    var savedCallback = React.useRef();\n    React.useEffect(function () {\n      savedCallback.current = callback;\n    });\n    React.useEffect(function () {\n      function tick() {\n        savedCallback.current();\n      }\n      var id = setInterval(tick, delay);\n      return function () {\n        return clearInterval(id);\n      };\n    }, [delay]);\n  }\n  function Dashboard() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Portfolio, null));\n  }\n  function Portfolio() {\n    var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      portfolios = _React$useState2[0],\n      setPortfolios = _React$useState2[1];\n    var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      generalError = _React$useState4[0],\n      setGeneralError = _React$useState4[1];\n    React.useEffect(function () {\n      // Load user's portfolio on the first mount\n      getPortfolios()[\"catch\"](function (err) {\n        return setGeneralError(err);\n      });\n    }, []);\n    var getPortfolios = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var ignore, response, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              ignore = false; // Wait for response\n              _context.next = 3;\n              return fetch('/portfolio');\n            case 3:\n              response = _context.sent;\n              if (ignore) {\n                _context.next = 10;\n                break;\n              }\n              _context.next = 7;\n              return response.json();\n            case 7:\n              data = _context.sent;\n              setPortfolios(data);\n              setActivePortfolio(data[0].id);\n            case 10:\n              return _context.abrupt(\"return\", function () {\n                ignore = true;\n              });\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function getPortfolios() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var handleClick = function handleClick(id) {\n      setActivePortfolio(id);\n    };\n    var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      activePortfolio = _React$useState6[0],\n      setActivePortfolio = _React$useState6[1];\n    var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      portfolioAsset = _React$useState8[0],\n      setPortfolioAsset = _React$useState8[1];\n    var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      txsError = _React$useState10[0],\n      setTxsError = _React$useState10[1];\n    var txsintervalRef = React.useRef(null);\n    var handleChartDisplay = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return update_txs();\n            case 2:\n              // Resize chart\n              lightWeightChartRef.current.timeScale().fitContent();\n              // Toggle chart display animation\n              setChartDisplayState(!chartDisplayState);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function handleChartDisplay() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var update_txs = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              getTxs().then(function (newTxs) {\n                if (newTxs !== null) {\n                  getPortfolioChartData(newTxs);\n                }\n              })[\"catch\"](function (err) {\n                return setTxsError(err);\n              });\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function update_txs() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    React.useEffect(function () {\n      // Clear the previous interval when activePortfolio changes\n      clearInterval(txsintervalRef.current);\n\n      // Set the portfolio dropdown innerHTML by the first portfolio name\n      var element = document.getElementById('portfolioName');\n      portfolios.map(function (portfolio) {\n        if (portfolio.id === activePortfolio) {\n          element.innerHTML = portfolio.name;\n        }\n      });\n      getTxs().then(function (newTxs) {\n        if (newTxs !== null) {\n          getAssets(newTxs);\n          getPortfolioChartData(newTxs);\n\n          // Query for user's assets detail per 60s interval\n          txsintervalRef.current = setInterval(function () {\n            getTxs().then(function (newTxs) {\n              if (newTxs !== null) {\n                getAssets(newTxs)[\"catch\"](function (err) {\n                  return setTxsError(err);\n                });\n              }\n            });\n          }, 60000);\n        }\n        return function () {\n          return clearInterval(txsintervalRef.current);\n        };\n      })[\"catch\"](function (err) {\n        return setTxsError(err);\n      });\n    }, [activePortfolio]);\n\n    // Reference for the LightWeightChart AreaSeries\n    var lightWeightChartRef = React.useRef(null);\n    var areaSeriesRef = React.useRef(null);\n    // Chart States\n    var _React$useState11 = React.useState(null),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      chartUpdate = _React$useState12[0],\n      setChartUpdate = _React$useState12[1];\n    React.useEffect(function () {\n      // To update the chart data without resizing the current chart\n      if (chartUpdate !== null && areaSeriesRef !== null) {\n        areaSeriesRef.current.update(chartUpdate);\n      }\n    }, [chartUpdate]);\n    var _React$useState13 = React.useState([]),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      chartData = _React$useState14[0],\n      setChartData = _React$useState14[1];\n    function portfolioChartData(time, assets, value) {\n      this.time = time;\n      this.assets = assets;\n      this.value = parseFloat(value.toFixed(2));\n    }\n    var _React$useState15 = React.useState(null),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      uiKlinesFetchState = _React$useState16[0],\n      setUiKlinesFetchState = _React$useState16[1];\n    var _React$useState17 = React.useState(false),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      isLoading = _React$useState18[0],\n      setIsLoading = _React$useState18[1];\n    var getuiKlinesById = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id, date) {\n        var intervalNum, response, data;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading(true);\n              intervalNum = '1h';\n              _context4.prev = 2;\n              _context4.next = 5;\n              return fetch(\"https://api.binance.com/api/v3/uiKlines?symbol=\".concat(id, \"USDT&interval=\").concat(intervalNum, \"&startTime=\").concat(date));\n            case 5:\n              response = _context4.sent;\n              _context4.next = 12;\n              break;\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](2);\n              setUiKlinesFetchState('failed'); // TypeError: failed to fetch\n              return _context4.abrupt(\"return\", null);\n            case 12:\n              _context4.next = 14;\n              return response.json();\n            case 14:\n              data = _context4.sent;\n              setIsLoading(false);\n              return _context4.abrupt(\"return\", data);\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[2, 8]]);\n      }));\n      return function getuiKlinesById(_x2, _x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var getCurrentAveragePriceById = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(id) {\n        var response, data;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch(\"https://api.binance.com/api/v3/avgPrice?symbol=\".concat(id, \"USDT\"));\n            case 2:\n              response = _context5.sent;\n              _context5.next = 5;\n              return response.json();\n            case 5:\n              data = _context5.sent;\n              return _context5.abrupt(\"return\", data.price);\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      return function getCurrentAveragePriceById(_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    var getTxs = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var ignore, response, data;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              ignore = false; // Wait for response\n              if (!(activePortfolio !== null && !ignore)) {\n                _context6.next = 15;\n                break;\n              }\n              _context6.next = 4;\n              return fetch(\"/txs_data/\".concat(activePortfolio));\n            case 4:\n              response = _context6.sent;\n              _context6.next = 7;\n              return response.json();\n            case 7:\n              data = _context6.sent;\n              if (!(response.status !== 200)) {\n                _context6.next = 13;\n                break;\n              }\n              setTxsError(data.error);\n              return _context6.abrupt(\"return\", null);\n            case 13:\n              setTxsError(null);\n              return _context6.abrupt(\"return\", data);\n            case 15:\n              return _context6.abrupt(\"return\", null);\n            case 16:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      return function getTxs() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    // Queried for user's asset market data\n    var getMarketDataById = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(ids) {\n        var ids_string, _iterator, _step, id, response, data;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              ids_string = \"\";\n              _iterator = _createForOfIteratorHelper(ids);\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  id = _step.value;\n                  ids_string += id + \"%2C\";\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              _context7.next = 5;\n              return fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&&ids=\".concat(ids_string, \"&order=market_cap_desc&sparkline=false&price_change_percentage=24h%2C7d\"), {\n                method: 'GET'\n              });\n            case 5:\n              response = _context7.sent;\n              _context7.next = 8;\n              return response.json();\n            case 8:\n              data = _context7.sent;\n              return _context7.abrupt(\"return\", data);\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      return function getMarketDataById(_x5) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    // Asset constructor function\n    function userAsset(data) {\n      this.index = null;\n      this.rank = data.market_cap_rank;\n      this.id = data.id;\n      this.symbol = data.symbol;\n      this.prev_price = data.current_price;\n      this.current_price = data.current_price;\n      this.market_cap = data.market_cap;\n      this.price_change_percentage_24h = data.price_change_percentage_24h;\n      this.price_change_percentage_7d = data.price_change_percentage_7d_in_currency;\n      this.image_url = data.image;\n      this.last_updated = data.last_updated;\n      this.average_cost = null;\n      this.quantity = null;\n      this.pnl = 0;\n    }\n\n    // Construct portfolio chart data\n    var getPortfolioChartData = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(newTxs) {\n        var symbols, _iterator2, _step2, tx, promises, latestAssetsValue_inMS, net_worth, asset_list, promises1, res, uKline_unixTimestamp_inMS, promises2, latest_assets, promises3, _net_worth, _latest_assets, portfolioAssetToUpdate, _promises2;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              if (!(chartData.length === 0)) {\n                _context16.next = 33;\n                break;\n              }\n              // Identify unique asset from user's txs\n              symbols = new Set();\n              _iterator2 = _createForOfIteratorHelper(newTxs);\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  tx = _step2.value;\n                  symbols.add(tx.symbol);\n                }\n                // Convert set to an array to iterate async with the method: map\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              symbols = Array.from(symbols);\n\n              // Query for assets 4hr klines data since the first recorded portfolio transction \n              promises = symbols.map( /*#__PURE__*/function () {\n                var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(symbol) {\n                  return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n                    while (1) switch (_context8.prev = _context8.next) {\n                      case 0:\n                        _context8.t0 = symbol;\n                        _context8.next = 3;\n                        return getuiKlinesById(symbol, Math.floor(new Date(newTxs[0].created_on).getTime()));\n                      case 3:\n                        _context8.t1 = _context8.sent;\n                        return _context8.abrupt(\"return\", {\n                          symbol: _context8.t0,\n                          uKline: _context8.t1\n                        });\n                      case 5:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }, _callee8);\n                }));\n                return function (_x7) {\n                  return _ref9.apply(this, arguments);\n                };\n              }()); // Waiting for promises to resolve\n              _context16.next = 8;\n              return Promise.all(promises);\n            case 8:\n              latestAssetsValue_inMS = _context16.sent;\n              if (!(latestAssetsValue_inMS[0].uKline === null)) {\n                _context16.next = 11;\n                break;\n              }\n              return _context16.abrupt(\"return\", null);\n            case 11:\n              net_worth = 0;\n              asset_list = [];\n              promises1 = newTxs.map( /*#__PURE__*/function () {\n                var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(tx) {\n                  var newchart, current_price, unixTimestamp_inMS;\n                  return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n                    while (1) switch (_context9.prev = _context9.next) {\n                      case 0:\n                        newchart = null;\n                        current_price = null; // Method getTime() returns in time milliseonds since 1970\n                        unixTimestamp_inMS = Math.floor(new Date(tx.created_on).getTime()); // Get the price of the asset at the closest 4hr Kline candlestick instead of tx.bought_on\n                        latestAssetsValue_inMS.map(function (AssetValue) {\n                          if (AssetValue.symbol === tx.symbol) {\n                            for (var i = 0; i < AssetValue.uKline.length - 2; i++) {\n                              // If transaction is created closer to opening 4hr Kline candlestick\n                              if (unixTimestamp_inMS - AssetValue.uKline[i][0] <= unixTimestamp_inMS - AssetValue.uKline[i + 1][0]) {\n                                // Use the starting price of the 4hr Kline candlestick\n                                current_price = AssetValue.uKline[i][1];\n                              } else {\n                                // Use the ending price of the 4hr Kline candlestick\n                                current_price = AssetValue.uKline[i + 1][1];\n                              }\n                            }\n                          }\n                        });\n                        if (tx.type === 'B') {\n                          net_worth += tx.quantity * current_price;\n                          asset_list.push({\n                            symbol: tx.symbol,\n                            quantity: tx.quantity\n                          });\n                        } else if (tx.type === 'S') {\n                          net_worth -= tx.quantity * current_price;\n                          asset_list.forEach(function (asset) {\n                            if (asset.symbol === tx.symbol) {\n                              asset.quantity -= tx.quantity;\n                            }\n                          });\n                        }\n                        // Clone the array of objects to prevent pointing to the same reference\n                        newchart = new portfolioChartData(unixTimestamp_inMS / 1000, structuredClone(asset_list), net_worth);\n                        return _context9.abrupt(\"return\", newchart);\n                      case 7:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }, _callee9);\n                }));\n                return function (_x8) {\n                  return _ref10.apply(this, arguments);\n                };\n              }()); // Waiting for promises to resolve\n              _context16.next = 16;\n              return Promise.all(promises1);\n            case 16:\n              res = _context16.sent;\n              uKline_unixTimestamp_inMS = latestAssetsValue_inMS[0].uKline; // Adding new Chart Data by timestamps\n              promises2 = uKline_unixTimestamp_inMS.map( /*#__PURE__*/function () {\n                var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(timestamp_inMS, index) {\n                  var promises, new_chartData;\n                  return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n                    while (1) switch (_context13.prev = _context13.next) {\n                      case 0:\n                        // Determine the networth at that instance by finding the closest transaction before timestamp_inMS\n                        promises = res.map( /*#__PURE__*/function () {\n                          var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(portChartData, chartDataIndex) {\n                            var net_worth, _promises;\n                            return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n                              while (1) switch (_context12.prev = _context12.next) {\n                                case 0:\n                                  net_worth = 0; // If timestamp_inMS[i] is < chartData[j].time, the networth of user's portfolio at that instance must be chartData[j - 1].time\n                                  if (!(timestamp_inMS[0] < res[res.length - chartDataIndex - 1].time * 1000 && chartDataIndex <= res.length - 2)) {\n                                    _context12.next = 6;\n                                    break;\n                                  }\n                                  _promises = res[res.length - chartDataIndex - 2].assets.map( /*#__PURE__*/function () {\n                                    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(asset) {\n                                      var promises;\n                                      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n                                        while (1) switch (_context11.prev = _context11.next) {\n                                          case 0:\n                                            promises = latestAssetsValue_inMS.map( /*#__PURE__*/function () {\n                                              var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(AssetValue) {\n                                                return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n                                                  while (1) switch (_context10.prev = _context10.next) {\n                                                    case 0:\n                                                      if (asset.symbol === AssetValue.symbol) {\n                                                        net_worth += parseFloat(asset.quantity * AssetValue.uKline[index][1]);\n                                                      }\n                                                    case 1:\n                                                    case \"end\":\n                                                      return _context10.stop();\n                                                  }\n                                                }, _callee10);\n                                              }));\n                                              return function (_x14) {\n                                                return _ref14.apply(this, arguments);\n                                              };\n                                            }());\n                                            _context11.next = 3;\n                                            return Promise.all(promises);\n                                          case 3:\n                                          case \"end\":\n                                            return _context11.stop();\n                                        }\n                                      }, _callee11);\n                                    }));\n                                    return function (_x13) {\n                                      return _ref13.apply(this, arguments);\n                                    };\n                                  }());\n                                  _context12.next = 5;\n                                  return Promise.all(_promises);\n                                case 5:\n                                  return _context12.abrupt(\"return\", new portfolioChartData(timestamp_inMS[0] / 1000, structuredClone(res[res.length - chartDataIndex - 2].assets), net_worth));\n                                case 6:\n                                  return _context12.abrupt(\"return\", null);\n                                case 7:\n                                case \"end\":\n                                  return _context12.stop();\n                              }\n                            }, _callee12);\n                          }));\n                          return function (_x11, _x12) {\n                            return _ref12.apply(this, arguments);\n                          };\n                        }());\n                        _context13.next = 3;\n                        return Promise.all(promises);\n                      case 3:\n                        new_chartData = _context13.sent;\n                        new_chartData = new_chartData.filter(function (data) {\n                          return data !== null;\n                        });\n                        if (new_chartData.length !== 0) {\n                          res.push(new_chartData[0]);\n                        }\n                      case 6:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }, _callee13);\n                }));\n                return function (_x9, _x10) {\n                  return _ref11.apply(this, arguments);\n                };\n              }());\n              _context16.next = 21;\n              return Promise.all(promises2);\n            case 21:\n              // Add starting chart data, i.e. networth = 0\n              res.push(new portfolioChartData(res[0].time - 4 * 60 * 60, [], parseFloat(0.00)));\n\n              // Sort the array of chart data by time in ascending order\n              res.sort(function (a, b) {\n                return a.time - b.time;\n              });\n\n              // Get current time chart data\n              latest_assets = res[res.length - 1].assets;\n              net_worth = 0;\n              promises3 = latest_assets.map( /*#__PURE__*/function () {\n                var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(asset) {\n                  var price;\n                  return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n                    while (1) switch (_context14.prev = _context14.next) {\n                      case 0:\n                        _context14.next = 2;\n                        return getCurrentAveragePriceById(asset.symbol);\n                      case 2:\n                        price = _context14.sent;\n                        net_worth += asset.quantity * price;\n                      case 4:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }, _callee14);\n                }));\n                return function (_x15) {\n                  return _ref15.apply(this, arguments);\n                };\n              }());\n              _context16.next = 28;\n              return Promise.all(promises3);\n            case 28:\n              res.push(new portfolioChartData(new Date().getTime() / 1000, structuredClone(latest_assets), net_worth));\n              setChartData(res);\n              return _context16.abrupt(\"return\", res);\n            case 33:\n              // Update the latest chart data only\n              _net_worth = 0;\n              _latest_assets = chartData[chartData.length - 1].assets;\n              portfolioAssetToUpdate = _toConsumableArray(portfolioAsset);\n              _promises2 = _latest_assets.map( /*#__PURE__*/function () {\n                var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(asset) {\n                  var price;\n                  return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n                    while (1) switch (_context15.prev = _context15.next) {\n                      case 0:\n                        _context15.next = 2;\n                        return getCurrentAveragePriceById(asset.symbol);\n                      case 2:\n                        price = _context15.sent;\n                        // Update portfolio asset metrics\n                        portfolioAssetToUpdate.forEach(function (pAsset) {\n                          if (pAsset.symbol === asset.symbol.toLowerCase()) {\n                            pAsset.prev_price = parseFloat(pAsset.current_price);\n                            pAsset.current_price = parseFloat(price);\n                            pAsset.pnl = (pAsset.current_price - pAsset.average_cost) * 100 / pAsset.average_cost;\n                          }\n                        });\n                        // Update chart data\n                        _net_worth += asset.quantity * price;\n                      case 5:\n                      case \"end\":\n                        return _context15.stop();\n                    }\n                  }, _callee15);\n                }));\n                return function (_x16) {\n                  return _ref16.apply(this, arguments);\n                };\n              }());\n              setPortfolioAsset(portfolioAssetToUpdate);\n              _context16.next = 40;\n              return Promise.all(_promises2);\n            case 40:\n              setChartUpdate(new portfolioChartData(new Date().getTime() / 1000, structuredClone(_latest_assets), _net_worth));\n              setAnimateState(!animateState);\n            case 42:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16);\n      }));\n      return function getPortfolioChartData(_x6) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    // Construct user's assets\n    var getAssets = /*#__PURE__*/function () {\n      var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(newTxs) {\n        var symbols_id, _iterator3, _step3, tx, temp_asset, chunks, _iterator4, _step4, data;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              // Identify unique asset from user's transactions\n              symbols_id = new Set();\n              _iterator3 = _createForOfIteratorHelper(newTxs);\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  tx = _step3.value;\n                  symbols_id.add(tx.symbol_id);\n                }\n                // Construct a list of unique userAsset objects\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n              temp_asset = [];\n              _context17.next = 6;\n              return getMarketDataById(symbols_id);\n            case 6:\n              chunks = _context17.sent;\n              _iterator4 = _createForOfIteratorHelper(chunks);\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  data = _step4.value;\n                  temp_asset.push(new userAsset(data));\n                }\n\n                // Update the net user's asset quantity, ,average cost, pnl\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n              temp_asset.forEach(function (asset) {\n                var _iterator5 = _createForOfIteratorHelper(newTxs),\n                  _step5;\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    var tx = _step5.value;\n                    if (tx.symbol_id === asset.id) {\n                      if (tx.type === 'B') {\n                        asset.quantity += tx.quantity;\n                        asset.average_cost += tx.bought_at * tx.quantity;\n                      } else if (tx.type === 'S') {\n                        asset.quantity -= tx.quantity;\n                        asset.average_cost -= tx.bought_at * tx.quantity;\n                      }\n                    }\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n                asset.average_cost /= asset.quantity;\n                asset.pnl = (asset.current_price - asset.average_cost) * 100 / asset.average_cost;\n              });\n\n              // Sort by largest current holding in descending order\n              temp_asset.sort(function (a, b) {\n                return b.current_price * b.quantity - a.current_price * a.quantity;\n              });\n\n              // Add index number for sorting, default to holding in descending order\n              temp_asset.map(function (asset, index) {\n                asset.index = index;\n              });\n              setPortfolioAsset(temp_asset);\n              return _context17.abrupt(\"return\", temp_asset);\n            case 14:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17);\n      }));\n      return function getAssets(_x17) {\n        return _ref17.apply(this, arguments);\n      };\n    }();\n\n    // Remove portfolio handler\n    var removePortfolio = /*#__PURE__*/function () {\n      var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(id) {\n        var ignore, response, responseStatus, data;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              ignore = false;\n              if (ignore) {\n                _context18.next = 13;\n                break;\n              }\n              _context18.next = 4;\n              return fetch(\"/portfolio/\".concat(parseInt(id)), {\n                method: 'POST'\n              });\n            case 4:\n              response = _context18.sent;\n              // Get the response status\n              responseStatus = response.status;\n              if (!(responseStatus !== 204)) {\n                _context18.next = 11;\n                break;\n              }\n              _context18.next = 9;\n              return response.json();\n            case 9:\n              data = _context18.sent;\n              setGeneralError(data.error);\n            case 11:\n              // Hide the modal\n              $('#deletePortfolioModal' + id).modal('hide');\n              getPortfolios();\n            case 13:\n              return _context18.abrupt(\"return\", function () {\n                ignore = true;\n              });\n            case 14:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18);\n      }));\n      return function removePortfolio(_x18) {\n        return _ref18.apply(this, arguments);\n      };\n    }();\n\n    // Pagination state\n    var _React$useState19 = React.useState(1),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      pageNum = _React$useState20[0],\n      setPageNum = _React$useState20[1];\n    // Update the css properties of page-link once the page state changes\n    var updatePagination = function updatePagination(num) {\n      var pageElement = document.querySelector(\"#page\".concat(num));\n      var allpages = document.getElementsByClassName('page-item');\n      // Disabled all link\n      var _iterator6 = _createForOfIteratorHelper(allpages),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var page = _step6.value;\n          page.classList.remove('active', 'disabled');\n        }\n        // Enable the clciked link\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      pageElement.classList.add('active');\n\n      // Disable the previous and next link accordingly\n      if (parseInt(num) === 1) {\n        // Enable 'next' and disable 'previous'\n        document.getElementsByClassName('previous')[0].classList.add('disabled');\n        document.getElementsByClassName('next')[0].classList.add('active');\n      } else if (parseInt(num) === allpages.length - 2) {\n        // Enable 'previous' and disable 'next'\n        document.getElementsByClassName('next')[0].classList.add('disabled');\n        document.getElementsByClassName('previous')[0].classList.add('active');\n      } else {\n        document.getElementsByClassName('previous')[0].classList.remove('disabled');\n        document.getElementsByClassName('next')[0].classList.remove('disabled');\n      }\n    };\n    React.useEffect(function () {\n      updatePagination(pageNum);\n    }, []);\n\n    // Compute the page length required\n    var assetPerPage = parseInt(5);\n    var page_length = Math.ceil(portfolioAsset.length / assetPerPage);\n    var page_num = [];\n    var _loop = function _loop(i) {\n      page_num.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        id: \"page\" + i,\n        className: \"page-item\"\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"page-link\",\n        onClick: function onClick() {\n          setPageNum(i);\n          updatePagination(i);\n          fadeIn2();\n        }\n      }, i)));\n    };\n    for (var i = 2; i < page_length + 1; i++) {\n      _loop(i);\n    }\n\n    // Update asset and chart data per 5s\n    useInterval(function () {\n      if (!isLoading && uiKlinesFetchState !== 'failed') {\n        getTxs().then(function (newTxs) {\n          if (newTxs !== null) {\n            getPortfolioChartData(newTxs)[\"catch\"](function (err) {\n              return setGeneralError(err);\n            });\n          }\n        });\n      }\n    }, 5000);\n\n    // Compute the totall portfolio statistics\n    var total_pnl = 0;\n    var total_cost = 0;\n    var prev_networth = 0;\n    var networth = 0;\n    // Account for portfolio with empty transactions\n    if (txsError === null) {\n      portfolioAsset.map(function (asset) {\n        total_pnl += asset.pnl * asset.average_cost;\n        total_cost += asset.average_cost;\n        asset.prev_price !== null ? prev_networth += parseFloat(asset.quantity * asset.prev_price) : prev_networth += 0;\n        networth += parseFloat(asset.quantity * asset.current_price);\n      });\n      total_pnl /= total_cost;\n    }\n\n    // -------ReactSpring Animations-------\n    var _React$useState21 = React.useState(true),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      chartDisplayState = _React$useState22[0],\n      setChartDisplayState = _React$useState22[1];\n    var _ReactSpring$useSprin = ReactSpring.useSpring({\n        from: {\n          fadeIn: 0\n        },\n        fadeIn: chartDisplayState ? 1 : 0,\n        config: {\n          duration: 500\n        }\n      }),\n      fadeIn = _ReactSpring$useSprin.fadeIn;\n    // Pagination Refresh animation\n    var _ReactSpring$useSprin2 = ReactSpring.useSpring(function () {\n        return {\n          from: {\n            opacity: 0\n          },\n          to: {\n            opacity: 1\n          },\n          config: {\n            duration: 1000\n          }\n        };\n      }),\n      _ReactSpring$useSprin3 = _slicedToArray(_ReactSpring$useSprin2, 2),\n      fade = _ReactSpring$useSprin3[0],\n      api = _ReactSpring$useSprin3[1];\n    var fadeIn2 = function fadeIn2() {\n      api({\n        from: {\n          opacity: 0\n        },\n        to: {\n          opacity: 1\n        }\n      });\n    };\n    // Portfolio asset content i.e. price refresh animation\n    var _React$useState23 = React.useState(true),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      animateState = _React$useState24[0],\n      setAnimateState = _React$useState24[1];\n    var _ReactSpring$useSprin4 = ReactSpring.useSpring({\n        from: {\n          refreshAnimation: 0\n        },\n        refreshAnimation: animateState ? 1 : 0,\n        config: {\n          duration: 1000\n        }\n      }),\n      refreshAnimation = _ReactSpring$useSprin4.refreshAnimation;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column justify-content-around\"\n    }, generalError === null ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"queryAlert alert alert-danger d-flex align-items-center justify-content-between p-2\",\n      role: \"alert\",\n      style: {\n        fontSize: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"bi bi-exclamation-triangle me-1\"\n    }), \" \", generalError), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-close btn-sm ms-1 pe-3\",\n      \"aria-label\": \"Close\",\n      onClick: function onClick() {\n        document.querySelector('.queryAlert').style.setProperty(\"display\", \"none\", \"important\");\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-row justify-content-start mb-2\"\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"chartDisplayButton\",\n      className: \"btn btn-outline-primary\",\n      type: \"button\",\n      \"data-bs-toggle\": \"collapse\",\n      \"data-bs-target\": \"#collapsePortfolioChart\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"collapsePortfolioChart\",\n      onClick: function onClick() {\n        return handleChartDisplay();\n      }\n    }, \"Chart\", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"bi bi-eye ms-1\"\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"bi bi-eye-slash ms-1\"\n    }))), /*#__PURE__*/React.createElement(ReactSpring.animated.div, {\n      className: \"collapse show mb-3\",\n      id: \"collapsePortfolioChart\",\n      style: {\n        opacity: fadeIn.to({\n          range: [0, 1],\n          output: [0.3, 1]\n        }),\n        scale: fadeIn.to({\n          range: [0, 0.5, 0.75, 1],\n          output: [0, 1.1, 0.95, 1]\n        })\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body p-1\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-start mb-3\"\n    }, isLoading && uiKlinesFetchState === null ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-outline-warning p-1\",\n      type: \"button\",\n      disabled: true,\n      style: {\n        fontSize: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-grow spinner-grow-sm me-1\",\n      role: \"status\",\n      \"aria-hidden\": \"true\",\n      style: {\n        height: '0.75rem',\n        width: '0.75rem'\n      }\n    }), \"Loading...\") : uiKlinesFetchState === 'failed' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chartAlert alert alert-danger d-flex align-items-center justify-content-between p-2\",\n      role: \"alert\",\n      style: {\n        fontSize: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"bi bi-exclamation-triangle me-1\"\n    }), \" Couldn't load chart data from binance API, is your IP address blocked from accessing binance.com?\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-close btn-sm ms-1\",\n      \"aria-label\": \"Close\",\n      onClick: function onClick() {\n        document.querySelector('.chartAlert').style.setProperty(\"display\", \"none\", \"important\");\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chart\",\n      className: \"d-flex flex-row chart ps-3\",\n      style: {\n        height: '30vh',\n        position: \"relative\"\n      }\n    }, /*#__PURE__*/React.createElement(ChartComponent, {\n      data: chartData,\n      lightWeightChartRef: lightWeightChartRef,\n      areaSeriesRef: areaSeriesRef\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lw-attribution\"\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://tradingview.github.io/lightweight-charts/\"\n    }, \"Powered by Lightweight Charts\")), txsError !== null || isLoading && uiKlinesFetchState === null ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"35%\",\n        zIndex: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-border text-primary\",\n      role: \"status\",\n      \"aria-hidden\": \"true\",\n      style: {\n        height: '3rem',\n        width: '3rem'\n      }\n    })) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-row justify-content-between align-items-center\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-row justify-content-start me-3 mb-3\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-outline-primary d-flex flex-column flex-md-row align-items-center portfolio_total_pnl p-3 me-3\",\n      style: {\n        fontSize: \"1em\"\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fw-semibold me-3\"\n    }, \"Total PNL: \"), /*#__PURE__*/React.createElement(ReactSpring.animated.span, {\n      className: parseFloat(total_pnl) > parseFloat(0) ? \"text-success\" : parseFloat(total_pnl) < parseFloat(0) ? \"text-danger\" : \"\",\n      style: {\n        opacity: refreshAnimation.to({\n          range: [0, 0.5, 1],\n          output: [1, 0.3, 1]\n        }),\n        color: refreshAnimation.to({\n          range: [0, 0.5, 1],\n          output: ['black', networth > prev_networth ? 'green' : networth < prev_networth ? 'red' : 'black', 'black']\n        })\n      }\n    }, total_pnl === 0 ? total_pnl + '%' : total_pnl.toFixed(2) + '%')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-outline-primary d-flex flex-column flex-md-row align-items-center portfolio_total_pnl p-3\",\n      style: {\n        fontSize: \"1em\"\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fw-semibold me-3\"\n    }, \"Networth: \"), /*#__PURE__*/React.createElement(ReactSpring.animated.span, {\n      className: \"\",\n      style: {\n        opacity: refreshAnimation.to({\n          range: [0, 0.5, 1],\n          output: [1, 0.3, 1]\n        }),\n        color: refreshAnimation.to({\n          range: [0, 0.5, 1],\n          output: ['black', networth > prev_networth ? 'green' : networth < prev_networth ? 'red' : 'black', 'black']\n        })\n      }\n    }, \"$ \", networth.toFixed(2)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3 me-2\"\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      value: activePortfolio,\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": \"#deletePortfolioModal\" + activePortfolio\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: 13,\n      height: 13,\n      fill: \"currentColor\",\n      className: \"bi bi-trash\",\n      viewBox: \"0 0 16 16\"\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"deletePortfolioModal\" + activePortfolio,\n      value: activePortfolio,\n      tabIndex: -1,\n      \"aria-labelledby\": \"deletePortfolioModal\" + activePortfolio + \"Label\",\n      \"aria-hidden\": \"true\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog modal-dialog-centered modal-sm\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\"\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"modal-title fs-5\",\n      id: \"deletePortfolioModal\" + activePortfolio + \"Label\"\n    }, \"Delete portfolio: \", portfolios.map(function (portfolio) {\n      return portfolio.id === activePortfolio ? portfolio.name : null;\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-close\",\n      \"data-bs-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body text-start\"\n    }, \"Are you sure?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\"\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-sm btn-secondary\",\n      \"data-bs-dismiss\": \"modal\"\n    }, \"Close\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-sm btn-danger\",\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        removePortfolio(activePortfolio);\n      }\n    }, \"Delete\"))))))), /*#__PURE__*/React.createElement(ReactSpring.animated.div, {\n      className: \"d-flex flex-column justify-content-between text-start\",\n      style: fade\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-row justify-content-between\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown mb-3\"\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"portfolioName\",\n      className: \"btn btn-sm btn-outline-primary dropdown-toggle\",\n      type: \"button\",\n      \"data-bs-toggle\": \"dropdown\",\n      \"aria-expanded\": \"false\"\n    }, \"Portfolio\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"dropdown-menu\"\n    }, portfolios.map(function (portfolio) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: portfolio.id\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"dropdown-item d-flex flex-row justify-content-between\",\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: function onClick() {\n          setChartData([]);\n          handleClick(portfolio.id);\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pt-1\",\n        style: {\n          fontSize: 15\n        }\n      }, portfolio.name)));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3 pe-2\"\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn btn-sm btn-success me-2\",\n      type: \"button\",\n      href: \"/transaction\"\n    }, \"Add Tx\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn btn-sm btn-danger\",\n      type: \"button\",\n      href: \"/transactionHistory\"\n    }, \"Remove Tx\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overviewBackground-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row ticker-header fw-semibold text-end\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 text-truncate\"\n    }, \"Rank\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 col-sm-2 col-xl-1 text-start\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-none d-md-grid col-3 col-lg-2\"\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-none d-lg-grid col-4 col-lg-3 col-xl-2\"\n    }, \"MarketCap.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-none d-xl-grid col-1\"\n    }, \"24h\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-none d-xl-grid col-1\"\n    }, \"7d\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 col-xs-5 col-md-3 col-lg-2\"\n    }, \"Holding\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 col-xs-4 col-sm-3 col-md-2 col-lg-2 col-xl-2\"\n    }, \"PNL\")), txsError !== null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row ticker-header text-secondary text-end ps-5\",\n      style: {\n        fontSize: 13\n      }\n    }, \"Please add some transactions.\") : /*#__PURE__*/React.createElement(Asset, {\n      portfolioAsset: portfolioAsset,\n      assetPerPage: assetPerPage,\n      pageNum: pageNum,\n      refreshAnimation: refreshAnimation\n    })), /*#__PURE__*/React.createElement(\"nav\", {\n      \"aria-label\": \"...\",\n      style: {\n        paddingTop: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"pagination pagination-sm justify-content-center\"\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item previous\"\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\"\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: function onClick() {\n        setPageNum(pageNum - 1);\n        updatePagination(pageNum - 1);\n        fadeIn2();\n      },\n      \"aria-hidden\": \"true\"\n    }, \"\\xAB\"))), /*#__PURE__*/React.createElement(\"li\", {\n      id: \"page1\",\n      className: \"page-item\",\n      \"aria-current\": \"page\"\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      onClick: function onClick() {\n        setPageNum(1);\n        updatePagination(1);\n        fadeIn2();\n      }\n    }, \"1\")), page_num, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item next\"\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\"\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: function onClick() {\n        setPageNum(pageNum + 1);\n        updatePagination(pageNum + 1);\n        fadeIn2();\n      },\n      \"aria-hidden\": \"true\"\n    }, \"\\xBB\"))))))))));\n  }\n  function ChartComponent(_ref19) {\n    var data = _ref19.data,\n      lightWeightChartRef = _ref19.lightWeightChartRef,\n      areaSeriesRef = _ref19.areaSeriesRef;\n    var chartContainerRef = React.useRef();\n    React.useEffect(function () {\n      var handleResize = function handleResize() {\n        lightWeightChartRef.current.applyOptions({\n          width: document.getElementById(\"chart\").clientWidth,\n          height: document.getElementById(\"chart\").clientHeight\n        });\n      };\n      lightWeightChartRef.current = LightweightCharts.createChart(chartContainerRef.current, {\n        layout: {\n          background: {\n            type: LightweightCharts.ColorType.Solid,\n            color: 'white'\n          },\n          textColor: 'black'\n        },\n        timeScale: {\n          timeVisible: true,\n          secondsVisible: false\n        },\n        width: document.getElementById(\"chart\").clientWidth,\n        height: document.getElementById(\"chart\").clientHeight\n      });\n      lightWeightChartRef.current.timeScale().fitContent();\n      areaSeriesRef.current = lightWeightChartRef.current.addAreaSeries({\n        lineColor: '#2962FF',\n        topColor: '#2962FF',\n        bottomColor: 'rgba(41, 98, 255, 0.28)',\n        lastPriceAnimation: LightweightCharts.LastPriceAnimationMode.Continuous\n      });\n      areaSeriesRef.current.setData(data);\n      window.addEventListener('resize', handleResize);\n      return function () {\n        window.removeEventListener('resize', handleResize);\n        lightWeightChartRef.current.remove();\n      };\n    }, [data]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: chartContainerRef\n    });\n  }\n  ;\n  function Asset(_ref20) {\n    var portfolioAsset = _ref20.portfolioAsset,\n      assetPerPage = _ref20.assetPerPage,\n      pageNum = _ref20.pageNum,\n      refreshAnimation = _ref20.refreshAnimation;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, portfolioAsset.slice(assetPerPage * (pageNum - 1), assetPerPage * pageNum).map(function (data, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"row ticker-container fw-light text-end\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\"\n      }, data.index + 1), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1 col-sm-2 col-xl-1 d-flex text-start\"\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: data.image_url,\n        className: \"me-2\",\n        style: {\n          maxHeight: 20,\n          maxWidth: 20\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-none d-sm-inline-flex\"\n      }, data.symbol.toUpperCase())), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-none d-md-grid col-3 col-lg-2\"\n      }, /*#__PURE__*/React.createElement(ReactSpring.animated.div, {\n        className: \"row row-cols-2 justify-content-between\",\n        style: {\n          opacity: refreshAnimation.to({\n            range: [0, 0.5, 1],\n            output: [1, 0.3, 1]\n          }),\n          color: refreshAnimation.to({\n            range: [0, 0.5, 1],\n            output: ['black', data.current_price > data.prev_price ? 'green' : data.current_price < data.prev_price ? 'red' : 'black', 'black']\n          })\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-auto ps-3 ps-xl-5\"\n      }, \"$\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-auto\"\n      }, data.current_price === null ? '-' : formatPrice(data.current_price.toFixed(2))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-none d-lg-grid col-4 col-lg-3 col-xl-2\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row row-cols-2 justify-content-between\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-auto\"\n      }, \"$\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-auto\"\n      }, data.market_cap === null ? '-' : formatPrice(data.market_cap)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: parseFloat(data.price_change_percentage_24h) > parseFloat(0) ? \"d-none d-xl-grid col-1 text-success\" : parseFloat(data.price_change_percentage_24h) === parseFloat(0) ? \"d-none d-xl-grid col-1\" : \"d-none d-xl-grid col-1 text-danger\"\n      }, data.price_change_percentage_24h === null ? '-' : data.price_change_percentage_24h.toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: parseFloat(data.price_change_percentage_7d) > parseFloat(0) ? \"d-none d-xl-grid col-1 text-success\" : parseFloat(data.price_change_percentage_7d) === parseFloat(0) ? \"d-none d-xl-grid col-1\" : \"d-none d-xl-grid col-1 text-danger\"\n      }, data.price_change_percentage_7d === null ? '-' : data.price_change_percentage_7d.toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6 col-xs-5 col-md-3 col-lg-2 justify-content-between\"\n      }, /*#__PURE__*/React.createElement(ReactSpring.animated.div, {\n        className: \"row row-cols-2 justify-content-around justify-content-sm-between\",\n        style: {\n          opacity: refreshAnimation.to({\n            range: [0, 0.5, 1],\n            output: [1, 0.3, 1]\n          }),\n          color: refreshAnimation.to({\n            range: [0, 0.5, 1],\n            output: ['black', data.current_price > data.prev_price ? 'green' : data.current_price < data.prev_price ? 'red' : 'black', 'black']\n          })\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-auto ps-0 ps-sm-5 ps-md-3 ps-xl-5\"\n      }, \"$\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-auto\"\n      }, data.current_price === null ? data.quantity : formatPrice((data.quantity * data.current_price).toFixed(2))))), /*#__PURE__*/React.createElement(ReactSpring.animated.div, {\n        className: parseFloat(data.pnl) > parseFloat(0) ? \"col-3 col-xs-4 col-sm-3 col-md-2 col-lg-2 col-xl-2 text-success\" : parseFloat(data.pnl) === parseFloat(0) ? \"col-3 col-xs-4 col-sm-3 col-md-2 col-lg-2 col-xl-2\" : \"col-3 col-xs-4 col-sm-3 col-md-2 col-lg-2 col-xl-2 text-danger\",\n        style: {\n          opacity: refreshAnimation.to({\n            range: [0, 0.5, 1],\n            output: [1, 0.3, 1]\n          }),\n          color: refreshAnimation.to({\n            range: [0, 0.5, 1],\n            output: ['black', data.current_price > data.prev_price ? 'green' : data.current_price < data.prev_price ? 'red' : 'black', 'black']\n          })\n        }\n      }, data.pnl === null ? '-' : data.pnl.toFixed(2), \"%\"));\n    }));\n  }\n  dashboard.render( /*#__PURE__*/React.createElement(Dashboard, null));\n});\n\n//# sourceURL=webpack://portfolio/./assets/js/dashboard.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./assets/js/dashboard.js"]();
/******/ 	
/******/ })()
;